import os
import torch
import clip
import faiss
import numpy as np
from PIL import Image
from tqdm import tqdm

# –ü–∞–ø–∫–∞ —Å –∫–∞–¥—Ä–∞–º–∏
frames_dir = os.path.expanduser("~/Desktop/–ü—Ä–∏–º–µ—Ä—ã –∫–∞–¥—Ä–æ–≤")

# –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ: –∫–∞–¥—Ä ‚Üí –≤–∏–¥–µ–æ—Ñ–∞–π–ª
frame_to_video = {
    "Frame_1.jpg": "Long_1.mp4",
    "Frame_2.jpg": "Long_2.mp4",
    "Frame_3.jpg": "Long_3.mp4",
    "Frame_4.jpg": "Long_4.mp4",
    "Frame_5.jpg": "Long_5.mp4",
    "Frame_6.jpg": "Long_6.mp4",
    "Frame_7.jpg": "Long_7.mp4",
    "Frame_8.jpg": "Long_8.mp4"
}

# –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
device = "cuda" if torch.cuda.is_available() else "cpu"

# –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ CLIP
print("[üß†] –ó–∞–≥—Ä—É–∂–∞–µ–º CLIP...")
model, preprocess = clip.load("ViT-B/32", device=device)

# –°–ø–∏—Å–∫–∏ –¥–ª—è —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤ –∏ –∏–º—ë–Ω
embeddings = []
filenames = []

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–∂–¥–æ–≥–æ –∫–∞–¥—Ä–∞
print("[üéûÔ∏è] –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–¥—Ä—ã...")
for frame_name, video_name in tqdm(frame_to_video.items()):
    frame_path = os.path.join(frames_dir, frame_name)
    if not os.path.exists(frame_path):
        print(f"[‚ö†Ô∏è] –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {frame_path}")
        continue

    image = Image.open(frame_path).convert("RGB")
    image_input = preprocess(image).unsqueeze(0).to(device)

    with torch.no_grad():
        image_features = model.encode_image(image_input).cpu().numpy()
        image_features /= np.linalg.norm(image_features, axis=1, keepdims=True)

    embeddings.append(image_features[0])
    filenames.append(video_name)

# –°–æ–∑–¥–∞–Ω–∏–µ FAISS-–∏–Ω–¥–µ–∫—Å–∞
print("[üì¶] –°—Ç—Ä–æ–∏–º FAISS-–∏–Ω–¥–µ–∫—Å...")
embedding_matrix = np.vstack(embeddings).astype("float32")
index = faiss.IndexFlatL2(embedding_matrix.shape[1])
index.add(embedding_matrix)

# –°–æ—Ö—Ä–∞–Ω—è–µ–º
faiss.write_index(index, "clip.index")
with open("clip_filenames.txt", "w", encoding="utf-8") as f:
    for name in filenames:
        f.write(f"{name}\n")

print("‚úÖ FAISS –∏–Ω–¥–µ–∫—Å –∏ clip_filenames.txt —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")